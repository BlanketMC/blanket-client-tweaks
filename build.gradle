plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.+'
	id "com.modrinth.minotaur" version "2.+"
	id 'io.github.juuxel.loom-quiltflower' version '1.8.+'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

repositories {
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://maven.quiltmc.org/repository/release" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	//For compatibility purposes only
	modCompileOnly group: 'org.quiltmc', name: 'quilt-loader', version: project.quilt_loader

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Non Fabric dependencies
	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")

	compileOnly("com.google.code.findbugs:annotations:3.0.1")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

/**
 * Rename every resource file to lowercase. With that, we can allow Crowdin to translate.
 */
tasks.withType(Copy) {
	eachFile {
		rename {
			String filename-> filename.toLowerCase()
		}
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}


//---------------- Publishing ----------------

ext.ENV = System.getenv()

ext.cfType = ENV.RELEASE_TYPE ? ENV.RELEASE_TYPE : "alpha"
ext.isRelease = cfType == "release"
ext.changes = ENV.CHANGELOG ? ENV.CHANGELOG.replaceAll("\\\\n", "\n") : ""
ext.mod_version = project.mod_version


if(!isRelease){
	ext.mod_version = "${project.mod_version}-SNAPSHOT-${ ENV.BUILD_NUMBER ? "build.${ENV.BUILD_NUMBER}" : 'git rev-parse --verify --short HEAD'.execute().text.trim()}"
}

version = ext.mod_version

ext.keysExists = ENV.CURSEFORGE_TOKEN != null || project.getGradle().getStartParameter().isDryRun()



if(keysExists) {
	println("Keys loaded, loading publish scripts")

	project.ext.keys = new Properties()
	if (project.getGradle().getStartParameter().isDryRun()) {
		println("Dry run, loading publish scripts")
		//These are fake, don't waste your time with it.
		project.ext.keys.curseforge_key = "00000000-0000-0000-0000-000000000000"
		project.ext.keys.modrinth_token = "gho_pJ9dGXVKpfzZp4PUHSxYEq9hjk0h288Gwj4S"
		project.ext.keys.kosmx_maven = "V2h5IGRpZCB5b3UgZGVjb2RlIGl0PyAg"
	} else {
		project.ext.keys.curseforge_key = ENV.CURSEFORGE_TOKEN
		project.ext.keys.modrinth_token = ENV.MODRINTH_TOKEN
		project.ext.keys.kosmx_maven = ENV.KOSMX_TOKEN //KosmX's maven (maven.kosmx.dev)
	}

	modrinth {

		versionType = project.cfType

		token = project.keys.modrinth_token

		projectId = "gxpkKtVH"
		versionNumber = "${project.mod_version}"
		versionName = "${project.mod_version}"
		gameVersions = ['1.19.3']
		changelog = changes
		loaders = ["fabric", "quilt"]
		uploadFile = remapJar
	}

	curseforge {
		apiKey = project.keys.curseforge_key
		project {
			id = '565968'
			changelogType = "markdown"
			changelog = changes
			releaseType = project.cfType

			addGameVersion "1.19.3"
			addGameVersion "Fabric"

			relations {
				requiredDependency 'fabric-api'
				requiredDependency 'modmenu'
				embeddedLibrary 'cloth-config'
			}

			options {
				forgeGradleIntegration = false // FABRIC MOD
				javaVersionAutoDetect = false // defaults to true
			}

			mainArtifact(remapJar)
			afterEvaluate {
				uploadTask.dependsOn(remapJar)
			}
		}
	}

	task publishMod {
		dependsOn(build)

		finalizedBy(publish)
		finalizedBy(tasks.curseforge)
		finalizedBy("modrinth")
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

		if (project.keysExists) {
			maven {
				url = 'https://maven.kosmx.dev/'
				credentials {
					username = 'blanketGH'
					password = project.keys.kosmx_maven
				}
			}
		} else {
			mavenLocal()
		}
	}
}
